import { z } from 'zod';



export const transportModeSchema = z.union([
  z.literal('air'),
  z.literal('bus'),
  z.literal('foot'),
  z.literal('bicycle'),
  z.literal('cableway'),
  z.literal('car'),
  z.literal('coach'),
  z.literal('funicular'),
  z.literal('lift'),
  z.literal('metro'),
  z.literal('monorail'),
  z.literal('rail'),
  z.literal('scooter'),
  z.literal('taxi'),
  z.literal('tram'),
  z.literal('trolleybus'),
  z.literal('unknown'),
  z.literal('water'),
]);
export type TransportModeType = z.infer<typeof transportModeSchema>;

export const transportSubmodeSchema = z.union([
  z.literal('SchengenAreaFlight'),
  z.literal('airportBoatLink'),
  z.literal('airportLinkBus'),
  z.literal('airportLinkRail'),
  z.literal('airshipService'),
  z.literal('allFunicularServices'),
  z.literal('allHireVehicles'),
  z.literal('allTaxiServices'),
  z.literal('bikeTaxi'),
  z.literal('blackCab'),
  z.literal('cableCar'),
  z.literal('cableFerry'),
  z.literal('canalBarge'),
  z.literal('carTransportRailService'),
  z.literal('chairLift'),
  z.literal('charterTaxi'),
  z.literal('cityTram'),
  z.literal('communalTaxi'),
  z.literal('commuterCoach'),
  z.literal('crossCountryRail'),
  z.literal('dedicatedLaneBus'),
  z.literal('demandAndResponseBus'),
  z.literal('domesticCharterFlight'),
  z.literal('domesticFlight'),
  z.literal('domesticScheduledFlight'),
  z.literal('dragLift'),
  z.literal('expressBus'),
  z.literal('funicular'),
  z.literal('helicopterService'),
  z.literal('highFrequencyBus'),
  z.literal('highSpeedPassengerService'),
  z.literal('highSpeedRail'),
  z.literal('highSpeedVehicleService'),
  z.literal('hireCar'),
  z.literal('hireCycle'),
  z.literal('hireMotorbike'),
  z.literal('hireVan'),
  z.literal('intercontinentalCharterFlight'),
  z.literal('intercontinentalFlight'),
  z.literal('international'),
  z.literal('internationalCarFerry'),
  z.literal('internationalCharterFlight'),
  z.literal('internationalCoach'),
  z.literal('internationalFlight'),
  z.literal('internationalPassengerFerry'),
  z.literal('interregionalRail'),
  z.literal('lift'),
  z.literal('local'),
  z.literal('localBus'),
  z.literal('localCarFerry'),
  z.literal('localPassengerFerry'),
  z.literal('localTram'),
  z.literal('longDistance'),
  z.literal('metro'),
  z.literal('miniCab'),
  z.literal('mobilityBus'),
  z.literal('mobilityBusForRegisteredDisabled'),
  z.literal('nationalCarFerry'),
  z.literal('nationalCoach'),
  z.literal('nationalPassengerFerry'),
  z.literal('nightBus'),
  z.literal('nightRail'),
  z.literal('postBoat'),
  z.literal('postBus'),
  z.literal('rackAndPinionRailway'),
  z.literal('railReplacementBus'),
  z.literal('railShuttle'),
  z.literal('railTaxi'),
  z.literal('regionalBus'),
  z.literal('regionalCarFerry'),
  z.literal('regionalCoach'),
  z.literal('regionalPassengerFerry'),
  z.literal('regionalRail'),
  z.literal('regionalTram'),
  z.literal('replacementRailService'),
  z.literal('riverBus'),
  z.literal('roadFerryLink'),
  z.literal('roundTripCharterFlight'),
  z.literal('scheduledFerry'),
  z.literal('schoolAndPublicServiceBus'),
  z.literal('schoolBoat'),
  z.literal('schoolBus'),
  z.literal('schoolCoach'),
  z.literal('shortHaulInternationalFlight'),
  z.literal('shuttleBus'),
  z.literal('shuttleCoach'),
  z.literal('shuttleFerryService'),
  z.literal('shuttleFlight'),
  z.literal('shuttleTram'),
  z.literal('sightseeingBus'),
  z.literal('sightseeingCoach'),
  z.literal('sightseeingFlight'),
  z.literal('sightseeingService'),
  z.literal('sightseeingTram'),
  z.literal('sleeperRailService'),
  z.literal('specialCoach'),
  z.literal('specialNeedsBus'),
  z.literal('specialTrain'),
  z.literal('streetCableCar'),
  z.literal('suburbanRailway'),
  z.literal('telecabin'),
  z.literal('telecabinLink'),
  z.literal('touristCoach'),
  z.literal('touristRailway'),
  z.literal('trainFerry'),
  z.literal('trainTram'),
  z.literal('tube'),
  z.literal('undefined'),
  z.literal('undefinedFunicular'),
  z.literal('unknown'),
  z.literal('urbanRailway'),
  z.literal('waterTaxi'),
]);

export type TransportSubmodeType = z.infer<typeof transportSubmodeSchema>;

export type TransportModeGroup = {
  transportMode: TransportModeType;
  transportSubModes?: TransportSubmodeType[];
};
