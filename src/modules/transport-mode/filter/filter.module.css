.heading {
  color: token('color.background.accent.0.foreground.primary');
  margin-bottom: token('spacing.medium');
  font-weight: 400;
}

.filter {
  display: grid;
  grid-template-columns: repeat(3, minmax(12.5rem, 1fr));
  gap: token('spacing.small');
}

.transportMode {
  list-style: none;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: token('spacing.xSmall');
}

.allTransportModes {
  grid-column: 1 / -1;
}

.allTransportModes .transportModeElement {
  max-width: calc(33.333% - (2 * token('spacing.small') / 3));
  /* for 'alle transportmidler' element (1/3 of filter's width - (2 * gap_width_in_grid)/num_of_columns) */
}

@media (max-width: 650px) {
  .filter {
    grid-template-columns: repeat(2, 1fr);
  }
  .allTransportModes .transportModeElement {
    max-width: 100%;
  }
}

.transportModeContainer {
  width: 100%;
}

.transportModeElement {
  padding: token('spacing.small') token('spacing.medium');
  border-radius: token('border.radius.regular');
  background-color: token('color.interactive.2.default.background');
  color: token('color.foreground.dynamic.primary');
  transition:
    border-color 150ms,
    background-color 150ms;
  cursor: pointer;
  display: flex;
  gap: token('spacing.small');
  align-items: center;
  border: 1px solid token('color.background.neutral.3.background');
  height: 2.25rem;
}

.transportMode input {
  clip: rect(0 0 0 0);
  clip-path: inset(100%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  display: block;
}

.infoText {
  color: token('color.foreground.dynamic.disabled');
  opacity: 0.75;
  max-width: 10rem;
}

.transportMode input:focus-visible ~ label {
  box-shadow: inset 0 0 0 token('border.width.medium')
    token('color.status.info.primary.background');
}

.transportMode input:hover ~ label {
  background-color: token('color.interactive.2.hover.background');
}
.transportMode input[type='checkbox']:checked ~ label {
  background-color: token('color.interactive.2.active.background');
  border: 1px solid token('color.interactive.2.outline.background');
}
.transportMode input:hover ~ label .checkboxBackground {
  background-color: token('color.interactive.2.default.background');
}
.transportMode input[type='checkbox']:checked:hover ~ label {
  background-color: token('color.interactive.2.hover.background');
}
.transportMode input[type='checkbox']:checked ~ label .checkboxBackground {
  background-color: token('color.interactive.2.active.background');
}
