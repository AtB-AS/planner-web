query Trips(
  $from: Location!
  $to: Location!
  $arriveBy: Boolean!
  $when: DateTime
  $cursor: String
  $transferPenalty: Int
  $waitReluctance: Float
  $walkReluctance: Float
  $walkSpeed: Float
  $modes: Modes
  $numTripPatterns: Int
) {
  trip(
    from: $from
    to: $to
    dateTime: $when
    arriveBy: $arriveBy
    pageCursor: $cursor
    transferPenalty: $transferPenalty
    waitReluctance: $waitReluctance
    walkReluctance: $walkReluctance
    walkSpeed: $walkSpeed
    modes: $modes
    numTripPatterns: $numTripPatterns
    searchWindow: 540 # 9 hours
  ) {
    ...trip
  }
}

query TripsNonTransit(
  $from: Location!
  $to: Location!
  $arriveBy: Boolean!
  $when: DateTime
  $walkSpeed: Float
  $includeFoot: Boolean!
  $includeBicycle: Boolean!
  $includeBikeRental: Boolean!
) {
  footTrip: trip(
    from: $from
    to: $to
    dateTime: $when
    arriveBy: $arriveBy
    numTripPatterns: 1
    walkSpeed: $walkSpeed
    modes: { directMode: foot, transportModes: [] }
  ) @include(if: $includeFoot) {
    tripPatterns {
      duration
      legs {
        mode
        rentedBike
      }
    }
  }
  bikeRentalTrip: trip(
    from: $from
    to: $to
    dateTime: $when
    arriveBy: $arriveBy
    walkSpeed: $walkSpeed
    numTripPatterns: 1
    modes: { directMode: bike_rental, transportModes: [] }
  ) @include(if: $includeBikeRental) {
    tripPatterns {
      duration
      legs {
        mode
        rentedBike
      }
    }
  }
  bicycleTrip: trip(
    from: $from
    to: $to
    dateTime: $when
    arriveBy: $arriveBy
    numTripPatterns: 1
    walkSpeed: $walkSpeed
    modes: { directMode: bicycle, transportModes: [] }
  ) @include(if: $includeBicycle) {
    tripPatterns {
      duration
      legs {
        mode
        rentedBike
      }
    }
  }
}

fragment trip on Trip {
  nextPageCursor
  previousPageCursor
  metadata {
    searchWindowUsed
  }
  tripPatterns {
    ...tripPattern
  }
}

fragment tripPattern on TripPattern {
  expectedStartTime
  expectedEndTime
  duration
  streetDistance
  legs {
    mode
    distance
    duration
    aimedStartTime
    aimedEndTime
    expectedEndTime
    expectedStartTime
    realtime
    line {
      id
      name
      transportSubmode
      publicCode
      flexibleLineType
      notices {
        ...notice
      }
    }
    fromEstimatedCall {
      aimedDepartureTime
      expectedDepartureTime
      destinationDisplay {
        frontText
      }
      quay {
        publicCode
        name
      }
      notices {
        ...notice
      }
    }
    situations {
      ...situation
    }
    fromPlace {
      name
      longitude
      latitude
      quay {
        id
        publicCode
        name
        longitude
        latitude
        stopPlace {
          id
          longitude
          latitude
          name
        }
        situations {
          ...situation
        }
        tariffZones {
          ...tariffZone
        }
      }
    }
    toPlace {
      name
      longitude
      latitude
      quay {
        id
        publicCode
        name
        longitude
        latitude
        stopPlace {
          id
          longitude
          latitude
          name
        }
        situations {
          ...situation
        }
        tariffZones {
          ...tariffZone
        }
      }
    }
    serviceJourney {
      id
      notices {
        ...notice
      }
      journeyPattern {
        notices {
          ...notice
        }
      }
    }
    interchangeTo {
      toServiceJourney {
        id
      }
      guaranteed
    }
    pointsOnLink {
      points
      length
    }
    intermediateEstimatedCalls {
      quay {
        name
        id
      }
      date
    }
    authority {
      id
    }
    transportSubmode
    serviceJourneyEstimatedCalls {
      actualDepartureTime
      realtime
      aimedDepartureTime
      expectedDepartureTime
      quay {
        name
      }
      predictionInaccurate
    }
    bookingArrangements {
      ...bookingArrangement
    }
    datedServiceJourney {
      estimatedCalls {
        actualDepartureTime
        quay {
          name
        }
        predictionInaccurate
      }
    }
    rentedBike
  }
}

fragment notice on Notice {
  id
  text
}

fragment situation on PtSituationElement {
  id
  situationNumber
  summary {
    ...multilingualString
  }
  description {
    ...multilingualString
  }
  reportType
  advice {
    ...multilingualString
  }
  infoLinks {
    ...infoLink
  }
  validityPeriod {
    ...validityPeriod
  }
}

fragment tariffZone on TariffZone {
  id
  name
}

fragment bookingArrangement on BookingArrangement {
  bookingMethods
  latestBookingTime
  bookingNote
  bookWhen
  latestBookingTime
  minimumBookingPeriod
  bookingContact {
    contactPerson
    email
    url
    phone
    furtherDetails
  }
}

fragment multilingualString on MultilingualString {
  language
  value
}

fragment infoLink on infoLink {
  uri
  label
}

fragment validityPeriod on ValidityPeriod {
  startTime
  endTime
}
